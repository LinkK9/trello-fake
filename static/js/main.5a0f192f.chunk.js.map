{"version":3,"sources":["utils/arrayutils.ts","store/task.slice.ts","styles.ts","components/add-item/NewItemForm.tsx","utils/useFocus.ts","components/add-item/AddNewItem.tsx","utils/useDnD.ts","components/modal-edit/ModalEdit.tsx","components/card/Card.tsx","components/column/Column.tsx","components/home/Home.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["moveItem","array","from","to","item","index","slice","insertItemAtIndex","removeItemAtIndex","findItemIndexById","id","findIndex","TaskSlice","createSlice","name","initialState","list","text","task","draggedItem","reducers","addNewList","state","action","push","payload","addNewTask","colIndex","col","colId","setDraggedItem","moveColumn","hoverIndex","hoverId","draggedIndex","draggedId","moveCard","draggedItemId","hoverItemId","sourceColId","targetColId","sourceListIndex","targetListIndex","dragItemIndex","hoverItemIndex","splice","editTitleColumn","newTitle","deleteColumn","editTaskName","newTaskName","cardIndex","deleteTask","selectTaskList","selectDraggedStatus","actions","DragPreviewContainer","styled","div","props","opacity","AppContainer","ColumnContainer","EditButton","button","ColumnTitle","CardContainer","AddItemButton","dark","NewItemFormContainer","NewItemButton","NewItemInput","input","NewItemForm","onAdd","useState","setText","inputRef","ref","useRef","useEffect","current","focus","useFocus","value","onChange","e","target","onKeyPress","key","onClick","AddNewItem","showForm","setShowForm","toggleButtonText","useItemDrag","dispatch","useDispatch","useDrag","type","end","collect","monitor","isDragging","drag","customStyles","content","top","left","right","bottom","marginRight","transform","backgroundColor","deleteButtonStyle","color","padding","textAlign","minWidth","fontWeight","border","headStyle","display","justifyContent","marginBottom","Modal","setAppElement","ModalEdit","typeItem","textVal","buttonVal","onEdit","onDelete","modalIsOpen","setIsOpen","closeModal","setTimeout","isOpen","onRequestClose","style","Card","drop","useSelector","useDrop","accept","hover","useCardDrop","Column","children","title","listCol","length","useColumnDrop","nanoid","Home","taskList","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","version","storage","persistedReducer","persistReducer","TaskReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","DndProvider","backend","HTML5Backend","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5a0f192f.chunk.js","sourcesContent":["\r\ntype Item = {\r\n\tid: string\r\n}\r\n\r\nexport const removeItemAtIndex = (array: any[], index: number ) => {\r\n\treturn [...array.slice(0, index), ...array.slice(index + 1)]\r\n}\r\n\r\nexport const insertItemAtIndex = (array: any[], item: any, index: number) => {\r\n\treturn [...array.slice(0, index), item ,...array.slice(index)]\r\n}\r\nexport const moveItem = (array: any[], from: number, to: number) => {\r\n\tconst item = array[from];\r\n\treturn insertItemAtIndex(removeItemAtIndex(array, from), item, to)\r\n}\r\n\r\nexport const findItemIndexById = (array: any[], id: string) => {\r\n\treturn array.findIndex((item: Item) => item.id === id)\r\n}","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { CardDragItem, ColumnDragItem } from \"../DragItems\";\r\nimport { findItemIndexById, moveItem } from \"../utils/arrayutils\";\r\nimport { RootState } from \"./store\";\r\n\r\ntype AppState = {\r\n  list: List[];\r\n  draggedItem?: CardDragItem | ColumnDragItem | null;\r\n};\r\ntype List = {\r\n  id: string;\r\n  text: string;\r\n  task: Task[];\r\n};\r\n\r\ntype Task = {\r\n  id: string;\r\n  text: string;\r\n};\r\nconst initialState: AppState = {\r\n  list: [\r\n    {\r\n      id: \"1\",\r\n      text: \"ToDo\",\r\n      task: [\r\n        { id: \"jsdgfads\", text: \"Master ReactJs\" },\r\n      ],\r\n    },\r\n    {\r\n      id: \"2\",\r\n      text: \"Đang Làm\",\r\n      task: [\r\n        { id: \"jswdfads\", text: \"Học React\" },\r\n        { id: \"jsfads\", text: \"Học TypeScript\" },\r\n      ],\r\n    },\r\n    {\r\n      id: \"3\",\r\n      text: \"Hoàn Thành\",\r\n      task: [],\r\n    },\r\n  ],\r\n  draggedItem: null,\r\n};\r\n\r\nexport const TaskSlice = createSlice({\r\n  name: \"taskList\",\r\n  initialState,\r\n  reducers: {\r\n    addNewList: (state, action: PayloadAction<List>) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    addNewTask: (state, action) => {\r\n      const colIndex = state.list.findIndex(\r\n        (col) => col.id === action.payload.colId\r\n      );\r\n      state.list[colIndex].task.push(action.payload.task);\r\n    },\r\n    setDraggedItem: (state, action) => {\r\n      state.draggedItem = action.payload;\r\n    },\r\n    moveColumn: (state, action) => {\r\n      const hoverIndex = findItemIndexById(state.list, action.payload.hoverId);\r\n      const draggedIndex = findItemIndexById(\r\n        state.list,\r\n        action.payload.draggedId\r\n      );\r\n      state.list = moveItem(state.list, hoverIndex, draggedIndex);\r\n    },\r\n    moveCard: (state, action) => {\r\n      const { draggedItemId, hoverItemId, sourceColId, targetColId } =\r\n        action.payload;\r\n      const sourceListIndex = findItemIndexById(state.list, sourceColId);\r\n      const targetListIndex = findItemIndexById(state.list, targetColId);\r\n      const dragItemIndex = findItemIndexById(\r\n        state.list[sourceListIndex].task,\r\n        draggedItemId\r\n      );\r\n\r\n      // Kiểm tra nếu cột đến chưa có thẻ nào thì cho target = 0\r\n      const hoverItemIndex = hoverItemId\r\n        ? findItemIndexById(state.list[targetListIndex].task, hoverItemId)\r\n        : 0;\r\n\r\n      const item = state.list[sourceListIndex].task[dragItemIndex];\r\n      // Xóa thẻ ở cột ban đầu\r\n      state.list[sourceListIndex].task.splice(dragItemIndex, 1);\r\n      // Chèn thẻ vào cột target\r\n      state.list[targetListIndex].task.splice(hoverItemIndex, 0, item);\r\n    },\r\n\r\n    editTitleColumn: (state, action) => {\r\n      const {colId, newTitle} = action.payload\r\n      const index = findItemIndexById(state.list, colId)\r\n      state.list[index].text = newTitle\r\n    },\r\n\r\n    deleteColumn: (state, action) => {\r\n      const index = findItemIndexById(state.list, action.payload.id)\r\n      state.list.splice(index, 1);\r\n    },\r\n\r\n    editTaskName: (state, action) => {\r\n      const {colId, id, newTaskName} = action.payload\r\n      const colIndex = findItemIndexById(state.list, colId)\r\n      const cardIndex = findItemIndexById(state.list[colIndex].task, id)\r\n      state.list[colIndex].task[cardIndex].text = newTaskName\r\n    },\r\n\r\n    deleteTask: (state, action) => {\r\n      const {colId, id} = action.payload\r\n      const colIndex = findItemIndexById(state.list, colId)\r\n      const cardIndex = findItemIndexById(state.list[colIndex].task, id)\r\n      state.list[colIndex].task.splice(cardIndex, 1)\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectTaskList = (state: RootState): List[] => state.list;\r\nexport const selectDraggedStatus = (state: RootState) => state.draggedItem;\r\n\r\nexport const {\r\n  addNewList,\r\n  addNewTask,\r\n  moveColumn,\r\n  setDraggedItem,\r\n  moveCard,\r\n  editTitleColumn,\r\n  deleteColumn,\r\n  editTaskName,\r\n  deleteTask,\r\n} = TaskSlice.actions;\r\n\r\nexport default TaskSlice.reducer;\r\n","import styled from \"styled-components\";\r\n\r\ntype AddNewButtonProps = {\r\n  dark?: boolean;\r\n};\r\n\r\ninterface DragPreviewProps {\r\n  opacity?: number;\r\n}\r\n\r\nexport const DragPreviewContainer = styled.div<DragPreviewProps>`\r\n  opacity: ${(props) => props.opacity};\r\n`;\r\n\r\nexport const AppContainer = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  background-color: #3179ba;\r\n  height: 100vh;\r\n  width: 100%;\r\n  padding: 20px;\r\n  overflow-x: auto;\r\n`;\r\nexport const ColumnContainer = styled(DragPreviewContainer)`\r\n  background-color: #ebecf0;\r\n  width: 300px;\r\n  min-height: 40px;\r\n  margin-right: 20px;\r\n  border-radius: 3px;\r\n  padding: 8px 8px;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nexport const EditButton = styled.button`\r\n  width: 20px;\r\n  height: 20px;\r\n  opacity: 0;\r\n  border: none;\r\n  background-color: inherit;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  &:hover {\r\n    background-color: #f1f1f1;\r\n  }\r\n`;\r\nexport const ColumnTitle = styled.div`\r\n  padding: 6px 0 12px 16px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  ${EditButton} {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const CardContainer = styled(DragPreviewContainer)`\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n  margin-bottom: 0.5rem;\r\n  padding: 0.5rem 0.5rem 0.5rem 1rem;\r\n  max-width: 300px;\r\n  border-radius: 3px;\r\n  box-shadow: #091e4240 0px 1px 0px 0px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  &:hover {\r\n    background-color: #f8f8f8;\r\n  }\r\n  &:hover ${EditButton} {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const AddItemButton = styled.button<AddNewButtonProps>`\r\n  max-width: 300px;\r\n  padding: 10px 12px;\r\n  text-align: left;\r\n  border-radius: 3px;\r\n  border: none;\r\n  background-color: #ffffff3d;\r\n  cursor: pointer;\r\n  color: ${(props) => (props.dark ? \"#000\" : \"#fff\")};\r\n  transition: background 85ms ease-in;\r\n  width: 100%;\r\n  flex-shrink: 0;\r\n  & :hover {\r\n    background-color: #ffffff52;\r\n  }\r\n`;\r\n\r\nexport const NewItemFormContainer = styled.div`\r\n  max-width: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  align-items: flex-start;\r\n  flex-shrink: 0;\r\n`;\r\nexport const NewItemButton = styled.button`\r\n  background-color: #5aac44;\r\n  border-radius: 3px;\r\n  border: none;\r\n  color: #fff;\r\n  text-align: center;\r\n  padding: 6px 12px;\r\n`;\r\n\r\nexport const NewItemInput = styled.input`\r\n  border-radius: 3px;\r\n  border: none;\r\n  box-shadow: #091e4240 0px 1px 0px 0px;\r\n  margin-bottom: 0.5rem;\r\n  width: 100%;\r\n  height: 2rem;\r\n`;\r\n","import React, { useState } from 'react'\r\nimport { NewItemButton, NewItemFormContainer, NewItemInput } from '../../styles'\r\nimport { useFocus } from '../../utils/useFocus'\r\n\r\ntype NewItemFormProps = {\r\n\tonAdd(text: string): void\r\n}\r\nconst NewItemForm = ({onAdd}: NewItemFormProps) => {\r\n\tconst [text, setText] = useState(\"\")\r\n\tconst inputRef = useFocus()\r\n\tconst handleAddtext = (e: React.KeyboardEvent) => {\r\n\t\tif (e.key === \"Enter\") {\r\n\t\t\tonAdd(text)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<NewItemFormContainer>\r\n\t\t\t<NewItemInput ref={inputRef} value={text} onChange={e => setText(e.target.value)} onKeyPress={handleAddtext} />\r\n\t\t\t<NewItemButton onClick={ () => onAdd(text)}>\r\n\t\t\t\tThêm\t\r\n\t\t\t</NewItemButton>\r\n\t\t</NewItemFormContainer>\r\n\t)\r\n}\r\n\r\nexport default NewItemForm\r\n","import { useEffect, useRef } from \"react\"\r\n\r\n\r\nexport const useFocus = () => {\r\n\tconst ref = useRef<HTMLInputElement>(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tref.current?.focus()\r\n\t}, [])\r\n\r\n\treturn ref\r\n}","import React, { useState } from \"react\";\r\nimport { AddItemButton } from \"../../styles\";\r\nimport NewItemForm from \"./NewItemForm\";\r\n\r\ntype AddNewItemProps = {\r\n  onAdd(text: string): void;\r\n  toggleButtonText: string;\r\n  dark?: boolean;\r\n};\r\nconst AddNewItem = (props: AddNewItemProps) => {\r\n  const [showForm, setShowForm] = useState(false);\r\n  const { onAdd, toggleButtonText, dark } = props;\r\n\r\n  if (showForm) {\r\n    return (\r\n      <NewItemForm\r\n        onAdd={(text) => {\r\n          onAdd(text);\r\n          setShowForm(false);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <AddItemButton dark={dark} onClick={() => setShowForm(true)}>\r\n      {toggleButtonText}\r\n    </AddItemButton>\r\n  );\r\n};\r\n\r\nexport default AddNewItem;\r\n","import { useDrag, useDrop } from \"react-dnd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { CardDragItem, ColumnDragItem, DragItem } from \"../DragItems\";\r\nimport {\r\n  moveCard,\r\n  moveColumn,\r\n  selectDraggedStatus,\r\n  selectTaskList,\r\n  setDraggedItem,\r\n} from \"../store/task.slice\";\r\n\r\nexport const useItemDrag = (item: DragItem) => {\r\n  const dispatch = useDispatch();\r\n  const [{ isDragging }, drag] = useDrag(() => ({\r\n    type: item.type,\r\n    item: () => {\r\n      dispatch(setDraggedItem(item));\r\n      return item;\r\n    },\r\n    end: () => {\r\n      dispatch(setDraggedItem(null));\r\n    },\r\n    collect: (monitor: any) => {\r\n      return {\r\n        isDragging: monitor.isDragging(),\r\n      };\r\n    },\r\n  }));\r\n\r\n  return { drag, isDragging };\r\n};\r\n\r\nexport const useColumnDrop = (item: ColumnDragItem) => {\r\n  const draggedItem = useSelector(selectDraggedStatus);\r\n  const listCol = useSelector(selectTaskList);\r\n  const dispatch = useDispatch();\r\n  const [, drop] = useDrop({\r\n    accept: [\"COLUMN\", \"CARD\"],\r\n    hover() {\r\n      if (!draggedItem) {\r\n        return;\r\n      }\r\n      if (draggedItem.type === \"COLUMN\") {\r\n        if (draggedItem.id === item.id) {\r\n          return;\r\n        }\r\n        dispatch(moveColumn({ hoverId: item.id, draggedId: draggedItem.id }));\r\n      } else {\r\n        const task =\r\n          listCol[listCol.findIndex((list) => list.id === item.id)].task;\r\n        if (draggedItem.id === item.id) {\r\n          return;\r\n        }\r\n        if (task.length) {\r\n          return;\r\n        }\r\n        dispatch(\r\n          moveCard({\r\n            draggedItemId: draggedItem.id,\r\n            hoverItemId: null,\r\n            sourceColId: draggedItem.colId,\r\n            targetColId: item.id,\r\n          })\r\n        );\r\n        dispatch(setDraggedItem({ ...draggedItem, colId: item.id }));\r\n      }\r\n    },\r\n  });\r\n\r\n  return { drop };\r\n};\r\nexport const useCardDrop = (item: CardDragItem) => {\r\n  const draggedItem = useSelector(selectDraggedStatus);\r\n  const dispatch = useDispatch();\r\n  const [, drop] = useDrop({\r\n    accept: item.type,\r\n    hover() {\r\n      if (!draggedItem) {\r\n        return;\r\n      }\r\n      if (draggedItem.type !== item.type) {\r\n        return;\r\n      }\r\n      if (draggedItem.id === item.id) {\r\n        return;\r\n      }\r\n      dispatch(\r\n        moveCard({\r\n          draggedItemId: draggedItem.id,\r\n          hoverItemId: item.id,\r\n          sourceColId: draggedItem.colId,\r\n          targetColId: item.colId,\r\n        })\r\n      );\r\n      dispatch(setDraggedItem({ ...draggedItem, colId: item.colId }));\r\n    },\r\n  });\r\n\r\n  return { drop };\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport { EditButton, NewItemInput } from \"../../styles\";\r\nimport Modal from \"react-modal\";\r\n\r\ntype ModalEditProps = {\r\n  textVal: string;\r\n  buttonVal: string;\r\n  typeItem: string;\r\n  onEdit: (text: string) => void;\r\n  onDelete: () => void;\r\n};\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"15%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    backgroundColor: \"#ebecf0\",\r\n  },\r\n};\r\n\r\nconst deleteButtonStyle: React.CSSProperties = {\r\n  color: \"#ffffff\",\r\n  backgroundColor: \"#ed4250\",\r\n  padding: \"10px 20px\",\r\n  textAlign: \"center\",\r\n  minWidth: 150,\r\n  fontWeight: \"bold\",\r\n  border: \"none\",\r\n};\r\n\r\nconst headStyle: React.CSSProperties = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  marginBottom: 10,\r\n};\r\n\r\nModal.setAppElement('#root');\r\nconst ModalEdit = ({\r\n  typeItem,\r\n  textVal,\r\n  buttonVal,\r\n  onEdit,\r\n  onDelete,\r\n}: ModalEditProps) => {\r\n  const [modalIsOpen, setIsOpen] = useState(false);\r\n  const [text, setText] = useState(textVal);\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleChangeText = (e: React.KeyboardEvent) => {\r\n    if (e.key === \"Enter\") {\r\n      onEdit(text);\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    onDelete();\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const openModal = () => {\r\n    setIsOpen(true);\r\n\t\tsetTimeout(() => {\r\n    inputRef.current?.focus();\r\n\t\t}, 10);\r\n  };\r\n  const closeModal = () => setIsOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <EditButton onClick={openModal}>{buttonVal}</EditButton>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n      >\r\n        <div style={headStyle}>\r\n          <strong> Chỉnh Sửa </strong>\r\n          <button onClick={closeModal}>x</button>\r\n        </div>\r\n        <NewItemInput\r\n          ref={inputRef}\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          onKeyPress={handleChangeText}\r\n        />\r\n        <button type=\"button\" onClick={handleDelete} style={deleteButtonStyle}>\r\n          Xóa {typeItem}\r\n        </button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalEdit;\r\n","import React, { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CardDragItem } from \"../../DragItems\";\r\nimport { deleteTask, editTaskName } from \"../../store/task.slice\";\r\nimport { CardContainer } from \"../../styles\";\r\nimport { useCardDrop, useItemDrag } from \"../../utils/useDnD\";\r\nimport ModalEdit from \"../modal-edit/ModalEdit\";\r\n\r\nexport type CardProps = {\r\n  id: string;\r\n  colId: string;\r\n  text: string;\r\n};\r\n\r\nconst Card = ({ id, colId, text }: CardProps) => {\r\n  const ref = useRef(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditText = (text: string) => {\r\n    dispatch(\r\n      editTaskName({\r\n        colId,\r\n        id,\r\n        newTaskName: text,\r\n      })\r\n    );\r\n  };\r\n  const handleDelete = () => {\r\n    dispatch(\r\n      deleteTask({\r\n        colId,\r\n        id,\r\n      })\r\n    );\r\n  };\r\n\r\n  const item: CardDragItem = {\r\n    id,\r\n    colId,\r\n    text,\r\n    type: \"CARD\",\r\n  };\r\n\r\n  const { drag, isDragging } = useItemDrag(item);\r\n  const { drop } = useCardDrop(item);\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(drop(ref));\r\n  return (\r\n    <CardContainer ref={ref} opacity={opacity}>\r\n      {text}\r\n      <ModalEdit\r\n        typeItem=\"Thẻ\"\r\n        textVal={text}\r\n        buttonVal=\"🖉\"\r\n        onEdit={handleEditText}\r\n        onDelete={handleDelete}\r\n      />\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { nanoid } from \"nanoid\";\r\nimport React, { useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ColumnDragItem } from \"../../DragItems\";\r\nimport {\r\n  addNewTask,\r\n  deleteColumn,\r\n  editTitleColumn,\r\n} from \"../../store/task.slice\";\r\nimport { ColumnContainer, ColumnTitle } from \"../../styles\";\r\nimport { useItemDrag, useColumnDrop } from \"../../utils/useDnD\";\r\nimport AddNewItem from \"../add-item/AddNewItem\";\r\nimport ModalEdit from \"../modal-edit/ModalEdit\";\r\n\r\nexport type ColumnProps = {\r\n  id: string;\r\n  text: string;\r\n};\r\n\r\nconst Column: React.FC<ColumnProps> = ({ id, text, children }) => {\r\n  const dispatch = useDispatch();\r\n  const handleAddTask = (text: string) => {\r\n    if (text === \"\") {\r\n      return;\r\n    }\r\n    dispatch(\r\n      addNewTask({\r\n        colId: id,\r\n        task: {\r\n          id: nanoid(),\r\n          text: text,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEditTitle = (text: string) => {\r\n    dispatch(\r\n      editTitleColumn({\r\n        colId: id,\r\n        newTitle: text,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDeleteColumn = () => {\r\n    dispatch(deleteColumn({ id }));\r\n  };\r\n\r\n  const item: ColumnDragItem = {\r\n    id,\r\n    title: text,\r\n    type: \"COLUMN\",\r\n  };\r\n  const ref = useRef(null);\r\n\r\n  const { drag, isDragging } = useItemDrag(item);\r\n  const { drop } = useColumnDrop(item);\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  drag(drop(ref));\r\n\r\n  return (\r\n    <ColumnContainer ref={ref} opacity={opacity}>\r\n      <ColumnTitle>\r\n        {text}\r\n        <ModalEdit\r\n          typeItem=\"Danh sách\"\r\n          textVal={text}\r\n          buttonVal=\"⋯\"\r\n          onEdit={handleEditTitle}\r\n          onDelete={handleDeleteColumn}\r\n        />\r\n      </ColumnTitle>\r\n      {children}\r\n      <AddNewItem toggleButtonText=\"+ Thêm thẻ\" onAdd={handleAddTask} dark />\r\n    </ColumnContainer>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import { nanoid } from \"nanoid\";\r\nimport React from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addNewList, selectTaskList } from \"../../store/task.slice\";\r\nimport { AppContainer } from \"../../styles\";\r\nimport AddNewItem from \"../add-item/AddNewItem\";\r\nimport Card from \"../card/Card\";\r\nimport Column from \"../column/Column\";\r\n\r\nconst Home: React.FC = () => {\r\n  const taskList = useSelector(selectTaskList);\r\n  const dispatch = useDispatch();\r\n  const handleAddList = (title: string) => {\r\n    if (title === \"\") {\r\n      return;\r\n    }\r\n    dispatch(\r\n      addNewList({\r\n        id: nanoid(),\r\n        text: title,\r\n        task: [],\r\n      })\r\n    );\r\n  };\r\n\r\n  const [ , drop] = useDrop(() => ({\r\n    accept: 'COLUMN',\r\n    \r\n  }))\r\n\r\n  return (\r\n    <AppContainer ref={drop}>\r\n      {taskList.map((list) => (\r\n        <Column text={list.text} id={list.id} key={list.id}>\r\n          {list.task.map((task) => (\r\n            <Card key={task.id} id={task.id} colId={list.id} text={task.text} />\r\n          ))}\r\n        </Column>\r\n      ))}\r\n      <AddNewItem toggleButtonText=\"+ Thêm danh sách khác \" onAdd={handleAddList} />\r\n    </AppContainer>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport Home from \"./components/home/Home\";\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport  TaskReducer  from \"./task.slice\";\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  version: 1,\r\n  storage,\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, TaskReducer)\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport persistStore from \"redux-persist/es/persistStore\";\n\nlet persistor = persistStore(store);\nReactDOM.render(\n  <DndProvider backend={HTML5Backend}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </DndProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}